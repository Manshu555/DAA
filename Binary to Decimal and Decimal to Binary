vector<int> decimalToBinary(int decimalValue) {
    vector<int> binaryVector;
    if (decimalValue == 0) {
        binaryVector.push_back(0);
        return binaryVector;
    }
    while (decimalValue > 0) {
        binaryVector.push_back(decimalValue % 2);
        decimalValue /= 2;
    }
    reverse(binaryVector.begin(), binaryVector.end());
    return binaryVector;
}

string decimalToBinary(int decimal) {
    if (decimal == 0) return "0";

    string binary = "";
    while (decimal > 0) {
        binary = to_string(decimal % 2) + binary;
        decimal /= 2;
    }
    return binary;
}

int binaryToDecimal(vector<int>& binaryVector) {
    int decimalValue = 0;
    int size = binaryVector.size();
    for (int i = 0; i < size; ++i) {
        decimalValue += binaryVector[i] * pow(2, size - 1 - i);
    }
    return decimalValue;
}

int btod(string & binaryVector) {
    int decimalValue = 0;
    int size = binaryVector.size();
    for (int i = 0; i < size; ++i) {
        decimalValue += (binaryVector[i] - '0') * (1 << (size - 1 - i));
    }
    return decimalValue;
}
